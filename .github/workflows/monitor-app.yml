name: Monitor application

on:
  push:
    tags:
      - 'v**'
  pull_request:
    branches:
    # Master and main are 2 names for the same branch, this is just to be sure we don't miss anything
      - master
      - main
      - development

env:
  NODE_VERSION: lts/Hydrogen
  NODE_ENV: development

jobs:
  lint:
    name: Lint
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: monitor-app
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline --no-optional --ignore-scripts

      - name: Lint
        run: pnpm lint

  test:
    name: Testing
    runs-on: ubuntu-latest
    needs:
      - lint
    defaults:
      run:
        working-directory: monitor-app
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: ${{ env.NODE_VERSION }}

      - uses: pnpm/action-setup@v2
        name: Install pnpm
        id: pnpm-install
        with:
          version: latest
          run_install: false

      - name: Get pnpm store directory
        id: pnpm-cache
        shell: bash
        run: |
          echo "STORE_PATH=$(pnpm store path)" >> $GITHUB_OUTPUT

      - uses: actions/cache@v3
        name: Setup pnpm cache
        with:
          path: ${{ steps.pnpm-cache.outputs.STORE_PATH }}
          key: ${{ runner.os }}-pnpm-store-${{ hashFiles('**/pnpm-lock.yaml') }}
          restore-keys: |
            ${{ runner.os }}-pnpm-store-

      - name: Install dependencies
        run: pnpm install --frozen-lockfile --prefer-offline --no-optional --ignore-scripts

      - name: Test code
        run: pnpm test:ci

  build:
    name: Build docker image
    runs-on: ubuntu-latest
    needs:
      - lint
      - test
    defaults:
      run:
        working-directory: monitor-app
    # Only build on push to a tag
    if: |
      contains(github.ref, 'refs/tags/')
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup QEMU
        uses: docker/setup-qemu-action@v2

      - name: Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Update this step to the correct registry later
      # Or add the secrets to the repository
      - name: Login to DockerHub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Build image and push to Registry
        uses: docker/build-push-action@v4
        with:
          context: ./monitor-app
          file: ./monitor-app/Dockerfile
          # Build for both amd64 (normal servers) and arm64 (ex: Raspberry Pi)
          platforms: linux/amd64,linux/arm64
          push: true
          cache-from: type=registry,ref=flexiblefischerfactory/monitor-app:latest
          tags: |
            flexiblefischerfactory/monitor-app:${{ github.ref_name }}
            flexiblefischerfactory/monitor-app:latest
